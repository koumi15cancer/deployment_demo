name: Build, Push, and Redeploy Services

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'nginx/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'nginx/**'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    outputs:
      backend_built: ${{ steps.set_output.outputs.backend_built }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend-v1
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/backend-v1:latest
          build-args: |
            SERVICE_NAME=backend-v1
            SERVICE_VERSION=1.0

      - name: Build and push backend-v2
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/backend-v2:latest
          build-args: |
            SERVICE_NAME=backend-v2
            SERVICE_VERSION=2.0

      - name: Set output
        id: set_output
        run: echo "backend_built=true" >> $GITHUB_OUTPUT

  build-nginx:
    runs-on: ubuntu-latest
    outputs:
      nginx_built: ${{ steps.set_output.outputs.nginx_built }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push nginx
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          platforms: linux/amd64
          push: true
          tags: ghcr.io/koumi15cancer/deployment_demo-nginx:latest

      - name: Set output
        id: set_output
        run: echo "nginx_built=true" >> $GITHUB_OUTPUT

  redeploy-backend-v1:
    needs: build-backend
    runs-on: ubuntu-latest
    if: needs.build-backend.outputs.backend_built == 'true'
    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      - name: Redeploy backend-v1
        run: railway redeploy -s backend-v1
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  redeploy-backend-v2:
    needs: build-backend
    runs-on: ubuntu-latest
    if: needs.build-backend.outputs.backend_built == 'true'
    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      - name: Redeploy backend-v2
        run: railway redeploy -s backend-v2
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  redeploy-nginx:
    needs: build-nginx
    runs-on: ubuntu-latest
    if: needs.build-nginx.outputs.nginx_built == 'true'
    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      - name: Redeploy nginx
        run: railway redeploy -s nginx
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

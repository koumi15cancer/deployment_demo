worker_processes auto;

env BACKEND_V1_HOST;
env BACKEND_V1_PORT;
env BACKEND_V2_HOST;
env BACKEND_V2_PORT;
env SPLIT_PERCENTAGE;

events {
    worker_connections 1024;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80 default_server;
        server_name _;

        location / {
            set $backend_url "";
            set $backend_choice "";
            access_by_lua_block {
                local split = tonumber(os.getenv("SPLIT_PERCENTAGE")) or 50
                local remote_addr = ngx.var.remote_addr or ""
                local request_id = ngx.var.request_id or ""
                local hash = ngx.crc32_short(remote_addr .. request_id)
                local percent = hash % 100
                local v1_host = os.getenv("BACKEND_V1_HOST") or "backend-v1"
                local v1_port = os.getenv("BACKEND_V1_PORT") or "8080"
                local v2_host = os.getenv("BACKEND_V2_HOST") or "backend-v2"
                local v2_port = os.getenv("BACKEND_V2_PORT") or "8080"
                
                
                if percent < split then
                    backend_url = "http://" .. v2_host .. ":" .. v2_port
                    backend_choice = "v2"
                else
                    backend_url = "http://" .. v1_host .. ":" .. v1_port
                    backend_choice = "v1"
                end
                
                -- Set debug headers
                ngx.header["X-Debug-Backend"] = ngx.var.backend_url
                ngx.header["X-Debug-Choice"] = ngx.var.backend_choice
                ngx.header["X-Debug-Path"] = ngx.var.request_uri
                
            }
            proxy_pass $backend_url;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
    }
} 